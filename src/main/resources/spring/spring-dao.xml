<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd">
	
	<!--
		profile定义系统运行环境，dev：开发环境；devtest：开发自身的测试环境；test：测试人员的测试环境；online：线上正式环境
		profile在web.xml中进行激活有效值
	 -->
	<beans profile="dev">
   		<!-- 1:配置数据库相关参数properties的属性：${url} -->
		<context:property-placeholder location="classpath:env/dev/jdbc-dev.properties"/>
		
		<!-- 2:数据库连接池 -->
		<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
			 <!-- 配置连接池属性 -->
	        <property name="driverClass" value="${jdbc.driver}"/>
	        <property name="jdbcUrl" value="${jdbc.url}"/>
	        <property name="user" value="${jdbc.username}"/>
	        <property name="password" value="${jdbc.password}"/>
	        
	        <!-- c3p0连接池的私有属性 -->
	        <property name="maxPoolSize" value="30"/>
	        <property name="minPoolSize" value="10"/>
	        
	        <!-- 关闭连接后，不自动commit -->
	        <property name="autoCommitOnClose" value="false"/>
	        
	        <!-- 获取连接超时时间 -->
	        <property name="checkoutTimeout" value="10000"></property>
	        
	        <!-- 当获取连接失败重试次数 -->
	        <property name="acquireRetryAttempts" value="2"></property>
		</bean>
		
		<!-- 约定大于配置 -->
	    <!-- 3:配置SqlSessionFactory对象 -->
		<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	        <!-- 注入数据库连接池 -->
	        <property name="dataSource" ref="dataSource"/>
	        
	        <!-- 配置MyBatis全局配置文件:mybatis-config.xml -->
	        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"/>
	        
	        <!-- 扫描entity包 使用别名 -->
	        <property name="typeAliasesPackage" value="cn.ly.seckill.po"/>
	        
	        <!-- 扫描sql配置文件:mapper需要的xml文件 -->
	        <property name="mapperLocations" value="classpath:mybatis/mapper/*.xml"/>
		</bean>
		
		<!-- 4:配置扫描Dao接口包,动态实现Dao接口，注入到spring容器中-->
	    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	        <!-- 注入sqlSessionFactory -->
	        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
	        
	        <!-- 给出需要扫描Dao接口包 -->
	        <property name="basePackage" value="cn.ly.seckill.dao"/>
	    </bean>
	    
	    <bean id="redisDao" class="cn.ly.seckill.dao.RedisDao">
	    	<constructor-arg index="0" value="192.168.0.121"/>
	    	<constructor-arg index="1" value="6379"/>
	    </bean>
	</beans>
	
	<beans profile="devtest">		
		<context:property-placeholder location="classpath:env/devtest/jdbc-devtest.properties"/>
		
		<!-- 2:数据库连接池 -->
		<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
			 <!-- 配置连接池属性 -->
	        <property name="driverClass" value="${jdbc.driver}"/>
	        <property name="jdbcUrl" value="${jdbc.url}"/>
	        <property name="user" value="${jdbc.username}"/>
	        <property name="password" value="${jdbc.password}"/>
	        
	        <!-- c3p0连接池的私有属性 -->
	        <property name="maxPoolSize" value="30"/>
	        <property name="minPoolSize" value="10"/>
	        
	        <!-- 关闭连接后，不自动commit -->
	        <property name="autoCommitOnClose" value="false"/>
	        
	        <!-- 获取连接超时时间 -->
	        <property name="checkoutTimeout" value="10000"></property>
	        
	        <!-- 当获取连接失败重试次数 -->
	        <property name="acquireRetryAttempts" value="2"></property>
		</bean>
		
		<!-- 约定大于配置 -->
	    <!-- 3:配置SqlSessionFactory对象 -->
		<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	        <!-- 注入数据库连接池 -->
	        <property name="dataSource" ref="dataSource"/>
	        
	        <!-- 配置MyBatis全局配置文件:mybatis-config.xml -->
	        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"/>
	        
	        <!-- 扫描entity包 使用别名 -->
	        <property name="typeAliasesPackage" value="cn.ly.seckill.po"/>
	        
	        <!-- 扫描sql配置文件:mapper需要的xml文件 -->
	        <property name="mapperLocations" value="classpath:mybatis/mapper/*.xml"/>
		</bean>
		
		<!-- 4:配置扫描Dao接口包,动态实现Dao接口，注入到spring容器中-->
	    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	        <!-- 注入sqlSessionFactory -->
	        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
	        
	        <!-- 给出需要扫描Dao接口包 -->
	        <property name="basePackage" value="cn.ly.seckill.dao"/>
	    </bean>
	    
	    <bean id="redisDao" class="cn.ly.seckill.dao.RedisDao">
	    	<constructor-arg index="0" value="192.168.0.121"/>
	    	<constructor-arg index="1" value="6379"/>
	    </bean>
	    
	</beans>
	
</beans>
